{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brady\\\\Documents\\\\Test Scripts\\\\First React Project\\\\my-app\\\\src\\\\components\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport classes from \"./SearchBar.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar() {\n  _s();\n\n  const searchRef = useRef();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedCountry, setLoadedCountry] = useState([]);\n\n  function onSearch(event) {\n    event.preventDefault();\n    const enteredSearch = searchRef.current.value;\n    console.log(enteredSearch);\n    navigate('/country', {\n      state: enteredSearch\n    });\n  }\n\n  useEffect(() => {\n    const url = \"https://restcountries.com/v3.1/all/\";\n    fetch(url).then(response => {\n      return response.json();\n    }).then(data => {\n      setIsLoading(false);\n      const countryNames = data.map(country => country = country.name.common);\n      setLoadedCountry(countryNames);\n      console.log(countryNames);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.searchContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        autoComplete: \"off\",\n        id: \"search\",\n        ref: searchRef,\n        className: classes.searchInput,\n        type: \"text\",\n        placeholder: \"Find a country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.suggestions,\n      children: loadedCountry.map(option => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.dropdownItem,\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBar, \"/sCg1VDmxZO+xHESUbjJnnvCDYo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/brady/Documents/Test Scripts/First React Project/my-app/src/components/SearchBar.js"],"names":["React","classes","useNavigate","useRef","useEffect","useState","SearchBar","searchRef","navigate","isLoading","setIsLoading","loadedCountry","setLoadedCountry","onSearch","event","preventDefault","enteredSearch","current","value","console","log","state","url","fetch","then","response","json","data","countryNames","map","country","name","common","searchContainer","searchInput","suggestions","option","dropdownItem"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,WAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AACA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAEhC,QAAMC,SAAS,GAAGJ,MAAM,EAAxB;AACA,QAAMK,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;;AAEA,WAASQ,QAAT,CAAkBC,KAAlB,EAAyB;AACrBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,aAAa,GAAGT,SAAS,CAACU,OAAV,CAAkBC,KAAxC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AACAR,IAAAA,QAAQ,CAAC,UAAD,EAAa;AAACa,MAAAA,KAAK,EAAEL;AAAR,KAAb,CAAR;AACH;;AAEDZ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkB,GAAG,GAAG,qCAAZ;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACEE,IADF,CACOC,QAAQ,IAAI;AACf,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAHD,EAGGF,IAHH,CAGQG,IAAI,IAAI;AACZjB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,YAAMkB,YAAY,GAAGD,IAAI,CAACE,GAAL,CAAUC,OAAD,IAAaA,OAAO,GAAGA,OAAO,CAACC,IAAR,CAAaC,MAA7C,CAArB;AACApB,MAAAA,gBAAgB,CAACgB,YAAD,CAAhB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,YAAZ;AACC,KARL;AASH,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAGnB,SAAH,EAAc;AACV,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAED,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAER,OAAO,CAACgC,eAAxB;AAAA,8BACI;AAAO,QAAA,YAAY,EAAC,KAApB;AAA0B,QAAA,EAAE,EAAC,QAA7B;AAAsC,QAAA,GAAG,EAAE1B,SAA3C;AAAsD,QAAA,SAAS,EAAEN,OAAO,CAACiC,WAAzE;AAAsF,QAAA,IAAI,EAAC,MAA3F;AAAkG,QAAA,WAAW,EAAC;AAA9G;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI;AAAK,UAAA,GAAG,EAAC,EAAT;AAAY,UAAA,GAAG,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAQ,QAAA,OAAO,EAAErB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQQ;AAAI,MAAA,SAAS,EAAEZ,OAAO,CAACkC,WAAvB;AAAA,gBACKxB,aAAa,CAACkB,GAAd,CAAmBO,MAAD,IAAY;AAC3B,4BACI;AAAQ,UAAA,SAAS,EAAEnC,OAAO,CAACoC,YAA3B;AAAA,oBACKD;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANA;AADL;AAAA;AAAA;AAAA;AAAA,YARR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAvDuB9B,S;UAGHJ,W;;;KAHGI,S","sourcesContent":["import React from \"react\"\r\nimport classes from \"./SearchBar.module.css\"\r\nimport { useNavigate} from \"react-router-dom\";\r\nimport { useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nexport default function SearchBar() {\r\n\r\n    const searchRef = useRef();\r\n    const navigate = useNavigate();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [loadedCountry, setLoadedCountry] = useState([]);\r\n    \r\n    function onSearch(event) {\r\n        event.preventDefault();\r\n        const enteredSearch = searchRef.current.value;\r\n        console.log(enteredSearch)\r\n        navigate('/country', {state: enteredSearch})\r\n    }\r\n\r\n    useEffect(() => {\r\n        const url = \"https://restcountries.com/v3.1/all/\"\r\n        fetch(url ,\r\n        ).then(response => {\r\n            return response.json();\r\n        }).then(data => {\r\n            setIsLoading(false);\r\n            const countryNames = data.map((country) => country = country.name.common)\r\n            setLoadedCountry(countryNames)\r\n            console.log(countryNames);\r\n            });\r\n    }, []);\r\n\r\n    if(isLoading) {\r\n        return(\r\n            <p>Loading...</p>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className={classes.searchContainer}>\r\n                <input autoComplete=\"off\" id=\"search\" ref={searchRef} className={classes.searchInput} type=\"text\" placeholder=\"Find a country\"></input>\r\n                <span>\r\n                    <img src=\"\" alt=\"\"></img>\r\n                </span>\r\n                <button onClick={onSearch}>Search</button>\r\n                    </div>\r\n                <ul className={classes.suggestions}>\r\n                    {loadedCountry.map((option) => {\r\n                        return(\r\n                            <button className={classes.dropdownItem}>\r\n                                {option}\r\n                            </button>\r\n                        )\r\n                    })}\r\n                </ul>\r\n\r\n                \r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}